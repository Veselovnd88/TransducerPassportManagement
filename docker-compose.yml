version: "3.8"


services:

  postgres:
    container_name: postgres-pt
    image: "postgres:15.2"
    restart: unless-stopped
    env_file:
      - database.env
    ports:
      - "5433:5432"
    networks:
      - postgres
    volumes:
      - /var/docker-volumes/pg-pt-management-ps:/var/lib/postgresql/data/

  pdfConverter:
    container_name: pdfConverter
    image: gotenberg/gotenberg:7
    ports:
      - "3000:3000"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    volumes:
      - /var/docker-volumes/minio-pt:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data

  vault:
    container_name: vault
    image: vault:1.13.3
    ports:
      - '8200:8200'
    environment:
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
      VAULT_DEV_ROOT_TOKEN_ID: "secret-token"
    cap_add:
      - IPC_LOCK

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    volumes:
      - /var/docker-volumes/kafka:/etc/kafka
    depends_on:
      - zookeeper


networks:
  postgres:
    driver: bridge