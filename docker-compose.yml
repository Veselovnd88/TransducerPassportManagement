version: "3.8"

services:

  postgres-pt:
    container_name: postgres-pt
    image: "postgres:16"
    restart: unless-stopped
    env_file:
      - database.env
    ports:
      - "5433:5432"
    networks:
      - postgres-pt
    volumes:
      - /var/docker-volumes/pg-pt-management-ps:/var/lib/postgresql/data/

  pdfConverter:
    container_name: pdfConverter
    image: gotenberg/gotenberg:7
    ports:
      - "3000:3000"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    volumes:
      - /var/docker-volumes/minio-pt:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data

  vault:
    container_name: vault
    image: vault:1.13.3
    ports:
      - '8200:8200'
    environment:
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
      VAULT_DEV_ROOT_TOKEN_ID: "secret-token"
    cap_add:
      - IPC_LOCK

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    user: root
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      #kafka-console-consumer --topic passports --from-beginning --bootstrap-server localhost:9092 --partition 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "passports"
    volumes:
      - /var/docker-volumes/kafka:/etc/kafka
    depends_on:
      - zookeeper

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    command: [ "start-dev" ]
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_DB_URL: "jdbc:postgresql://postgres-kc:5437/pt-keycloak"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
    ports:
      - "8079:8080"
    volumes:
      - /var/docker-volumes/keycloak:/opt/keycloak/data/
    networks:
      - keycloak-postgres
    depends_on:
      - keycloak-postgres

  keycloak-postgres:
    container_name: postgres-kc
    image: "postgres:16"
    restart: unless-stopped
    env_file:
      - database-keycloak.env
    command:
      - "-p 5437"
    ports:
      - "5437:5437"
    networks:
      - keycloak-postgres
    volumes:
      - /var/docker-volumes/pg-keycloak-ps:/var/lib/postgresql/data/

  postgres-generate-service:
    container_name: postgres-generate-service
    image: "postgres:16"
    restart: unless-stopped
    environment:
      - POSTGRES_DB=TemplateDB
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "5434:5432"
    networks:
      - postgres-generate
    volumes:
      - /var/docker-volumes/pg-pt-management-generate-service:/var/lib/postgresql/data/

networks:
  postgres-pt:
    driver: bridge
  postgres-generate:
    driver: bridge
  keycloak-postgres:
    driver: bridge